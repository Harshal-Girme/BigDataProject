package HW5.HW5part6;

import java.io.IOException;
import java.util.Map.Entry;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.SortedMapWritable;
import org.apache.hadoop.io.Writable;
import org.apache.hadoop.io.WritableComparable;
import org.apache.hadoop.mapreduce.Reducer;

public class MCombiner extends Reducer<IntWritable, SortedMapWritable, IntWritable, SortedMapWritable> {
	@SuppressWarnings("rawtypes")
    protected void reduce(IntWritable key, Iterable<SortedMapWritable> values,
            Reducer<IntWritable, SortedMapWritable, IntWritable, SortedMapWritable>.Context context)
            throws IOException, InterruptedException {
        
        SortedMapWritable outValues = new SortedMapWritable();
        
        for(SortedMapWritable v : values) {
            for(Entry<WritableComparable, Writable> entry : v.entrySet()) {
                LongWritable count = (LongWritable) outValues.get(entry.getKey());
                if(count !=null) {
                    count.set(count.get()+ ((LongWritable)entry.getValue()).get());
                }else {
                    LongWritable val =new LongWritable(((IntWritable) entry.getValue()).get());
                    outValues.put(entry.getKey(),val);
                }
            }
            v.clear();
        }
        context.write(key, outValues);
    }
}